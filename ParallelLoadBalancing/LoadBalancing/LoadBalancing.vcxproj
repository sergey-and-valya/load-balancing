<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug MPI|Win32">
      <Configuration>Debug MPI</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release MPI|Win32">
      <Configuration>Release MPI</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug Emulate MPI|Win32">
      <Configuration>Debug Emulate MPI</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release Emulate MPI|Win32">
      <Configuration>Release Emulate MPI</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{F6D8C100-9EA9-45B4-A27F-E1F38D0AC83E}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>LoadBalancing</RootNamespace>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(SolutionDir)\ProjectConfig.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <Link>
      <SubSystem>Console</SubSystem>
    </Link>
    <CustomBuild>
      <Command>copy /Y "%(FullPath)" "$(OutputPath)%(Filename)"</Command>
      <Outputs>$(OutputPath)%(Filename)</Outputs>
    </CustomBuild>
    <PostBuildEvent>
      <Command>copy /Y "$(SolutionDir)..\thirdparty\lua5.2\lib\windows\x86\lua52.dll" "$(OutDir)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <PreprocessorDefinitions>_CONSOLE;LUALB_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="Environment.h" />
    <ClInclude Include="include\LoadBalancing\IFunction.h" />
    <ClInclude Include="include\LoadBalancing\IInputFile.h" />
    <ClInclude Include="include\LoadBalancing\IEnvironment.h" />
    <ClInclude Include="include\LoadBalancing\ILoadBalancingAlgorithm.h" />
    <ClInclude Include="include\LoadBalancing\IMPI.h" />
    <ClInclude Include="include\LoadBalancing\IMPICommunicator.h" />
    <ClInclude Include="include\LoadBalancing\IProblemBuilder.h" />
    <ClInclude Include="include\LoadBalancing\IRebalancer.h" />
    <ClInclude Include="include\LoadBalancing\IDomainModel.h" />
    <ClInclude Include="include\LoadBalancing\LuaAPI\IDomainModel.h" />
    <ClInclude Include="include\LoadBalancing\LuaAPI\IEnvironment.h" />
    <ClInclude Include="include\LoadBalancing\LuaAPI\ILoadBalancingAlgorithm.h" />
    <ClInclude Include="include\LoadBalancing\LuaAPI\IRebalancer.h" />
    <ClInclude Include="include\LoadBalancing\LuaAPI\LuaAPI.h" />
    <ClInclude Include="LoadBalancingAlgorithm.h" />
    <ClInclude Include="LuaFunction.h" />
    <ClInclude Include="MPIWorldCommunicator.h" />
    <ClInclude Include="ProblemBuilder.h" />
    <ClInclude Include="Rebalancer.h" />
    <ClInclude Include="SampleFunction.h" />
    <ClInclude Include="StandartLuaModule.h" />
    <ClInclude Include="StandartLuaModule\DomainModelModule.h" />
    <ClInclude Include="StandartLuaModule\EnvironmentModule.h" />
    <ClInclude Include="StandartLuaModule\LoadBalancingAlgorithmModule.h" />
    <ClInclude Include="StandartLuaModule\LuaFunctionModule.h" />
    <ClInclude Include="StandartLuaModule\RebalancerModule.h" />
    <ClInclude Include="tests\EnvironmentTest.h" />
    <ClInclude Include="DomainModel.h" />
    <ClInclude Include="BinaryFile.h" />
    <ClInclude Include="tests\LoadBalancingTest.h" />
    <ClInclude Include="tests\RebalancerTest.h" />
    <ClInclude Include="tests\utils\TestMPIWorld.h" />
    <ClInclude Include="tests\utils\TestInputFile.h" />
    <ClInclude Include="tests\utils\TestProblemBuilder.h" />
    <ClInclude Include="tests\utils\TestRebalancer.h" />
    <ClInclude Include="tests\Tests.h" />
    <ClInclude Include="tests\DomainModelTest.h" />
    <ClInclude Include="tests\utils\TestCommunicator.h" />
    <ClInclude Include="tests\utils\Testkit.h" />
    <ClInclude Include="tests\utils\TestDomainModel.h" />
    <ClInclude Include="tests\utils\TestLoadBalancing.h" />
    <ClInclude Include="tests\utils\Assert.h" />
    <ClInclude Include="Utils.h" />
    <ClInclude Include="Values.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Environment.cpp" />
    <ClCompile Include="BinaryFile.cpp" />
    <ClCompile Include="LoadBalancingAlgorithm.cpp" />
    <ClCompile Include="LuaAPI\IDomainModel.cpp" />
    <ClCompile Include="LuaAPI\IEnvironment.cpp" />
    <ClCompile Include="LuaAPI\ILoadBalancingAlgorithm.cpp" />
    <ClCompile Include="LuaAPI\IRebalancer.cpp" />
    <ClCompile Include="LuaAPI\LuaAPI.cpp" />
    <ClCompile Include="LuaFunction.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="MPIWorldCommunicator.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)'=='Debug Emulate MPI' or '$(Configuration)'=='Release Emulate MPI'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="Rebalancer.cpp" />
    <ClCompile Include="DomainModel.cpp" />
    <ClCompile Include="SampleFunction.cpp" />
    <ClCompile Include="StandartLuaModule.cpp" />
    <ClCompile Include="StandartLuaModule\DomainModelModule.cpp" />
    <ClCompile Include="StandartLuaModule\EnvironmentModule.cpp" />
    <ClCompile Include="StandartLuaModule\LoadBalancingAlgorithmModule.cpp" />
    <ClCompile Include="StandartLuaModule\LuaFunctionModule.cpp" />
    <ClCompile Include="StandartLuaModule\RebalancerModule.cpp" />
    <ClCompile Include="tests\EnvironmentTest.cpp" />
    <ClCompile Include="tests\LoadBalancingTest.cpp" />
    <ClCompile Include="tests\DomainModelTest.cpp" />
    <ClCompile Include="tests\RebalancerTest.cpp" />
    <ClCompile Include="tests\utils\TestMPIWorld.cpp" />
    <ClCompile Include="tests\utils\Testkit.cpp" />
    <ClCompile Include="Utils.cpp" />
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="res\matrix">
      <FileType>Document</FileType>
      <Command>copy /Y "%(FullPath)" "$(OutputPath)%(Filename)%(Extension)"</Command>
      <Outputs>$(OutputPath)%(Filename)%(Extension)</Outputs>
    </CustomBuild>
    <CustomBuild Include="lua\domain_functions\sample1.lua">
      <FileType>Document</FileType>
      <Command>copy /Y "%(FullPath)" "$(OutputPath)%(RelativeDir)%(Filename)%(Extension)"</Command>
      <Outputs>$(OutputPath)%(RelativeDir)%(Filename)%(Extension)</Outputs>
    </CustomBuild>
    <None Include="lua\config.template.lua" />
    <None Include="res\matrix.txt" />
    <CustomBuild Include="res\matrix2">
      <FileType>Document</FileType>
      <Command>copy /Y "%(FullPath)" "$(OutputPath)%(Filename)%(Extension)"</Command>
      <Outputs>$(OutputPath)%(Filename)%(Extension)</Outputs>
    </CustomBuild>
    <None Include="res\matrix2.txt" />
    <CustomBuild Include="res\matrix3">
      <FileType>Document</FileType>
      <Command>copy /Y "%(FullPath)" "$(OutputPath)%(Filename)%(Extension)"</Command>
      <Outputs>$(OutputPath)%(Filename)%(Extension)</Outputs>
    </CustomBuild>
    <None Include="res\matrix3.txt" />
    <CustomBuild Include="res\matrix_big">
      <FileType>Document</FileType>
      <Command>copy /Y "%(FullPath)" "$(OutputPath)%(Filename)%(Extension)"</Command>
      <Outputs>$(OutputPath)%(Filename)%(Extension)</Outputs>
    </CustomBuild>
    <CustomBuild Include="res\matrix_G1">
      <FileType>Document</FileType>
      <Command>copy /Y "%(FullPath)" "$(OutputPath)%(Filename)%(Extension)"</Command>
      <Outputs>$(OutputPath)%(Filename)%(Extension)</Outputs>
    </CustomBuild>
    <None Include="res\readme.txt" />
    <None Include="res\testmatrix.txt" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>